---
- name: Create .themes and .icons directories
  ansible.builtin.file:
    path: "/home/{{ gnome_user }}/{{ item }}"
    state: directory
    mode: 0774
  loop:
    - .themes
    - .icons

- name: Download gruvbox icons
  ansible.builtin.git:
    repo: "https://github.com/SylEleuth/gruvbox-plus-icon-pack.git"
    dest: "/home/{{ gnome_user }}/.icons/gruvbox-plus-icon-pack"
    clone: true
    version: master
    force: true

- name: Get gruvbox cursors latest release
  community.general.github_release:
    user: "sainnhe"
    repo: "capitaine-cursors"
    action: latest_release
  register: gruvbox_cursors_latest_release

- name: Download gruvbox cursors
  ansible.builtin.unarchive:
    src: "https://github.com/sainnhe/capitaine-cursors/releases/download/{{ gruvbox_cursors_latest_release.tag }}/Linux.zip"
    dest: "/home/{{ gnome_user }}/.icons"
    remote_src: true
    owner: "{{ gnome_user }}"
    group: "{{ gnome_user }}"
    mode: 0774

- name: Download gtk themes
  ansible.builtin.git:
    repo: "https://github.com/Fausto-Korpsvart/Gruvbox-GTK-Theme.git"
    dest: "/tmp/Gruvbox-GTK-Theme"
    clone: true
    version: master
    force: true

- name: Move gtk themes to .themes
  ansible.builtin.copy:
    src: "/tmp/Gruvbox-GTK-Theme/themes/Gruvbox-Dark-B/"
    dest: "/home/{{ gnome_user }}/.themes/Gruvbox-Dark-B"
    remote_src: true
    owner: "{{ gnome_user }}"
    group: "{{ gnome_user }}"
    mode: 0774

- name: Create gtk4 directory
  ansible.builtin.file:
    path: "/home/{{ gnome_user }}/.config/gtk-4.0"
    state: directory
    mode: 0774

- name: Copy gtk4 themes
  ansible.builtin.copy:
    src: "/tmp/Gruvbox-GTK-Theme/themes/Gruvbox-Dark-B/gtk-4.0/"
    dest: "/home/{{ gnome_user }}/.config/gtk-4.0"
    remote_src: true
    owner: "{{ gnome_user }}"
    group: "{{ gnome_user }}"
    mode: 0774

- name: Create gnome-text-editor themes directory
  ansible.builtin.file:
    path: "/usr/share/gnome-text-editor/styles"
    state: directory
    mode: 0774

- name: Copy gnome-text-editor theme
  ansible.builtin.copy:
    src: "/tmp/Gruvbox-GTK-Theme/extra/text-editor/gruvbox-hard.xml"
    dest: "/usr/share/gnome-text-editor/styles/gruvbox-hard.xml"
    remote_src: true
    mode: 0774

- name: Create ulauncher themes directory
  ansible.builtin.file:
    path: "/home/{{ gnome_user }}/.config/ulauncher/user-themes"
    state: directory
    mode: 0774

- name: Copy ulauncher theme
  ansible.builtin.copy:
    src: "/tmp/Gruvbox-GTK-Theme/extra/ulauncher/Gruvbox_Dark/"
    dest: "/home/{{ gnome_user }}/.config/ulauncher/user-themes/Gruvbox_Dark"
    remote_src: true
    owner: "{{ gnome_user }}"
    group: "{{ gnome_user }}"
    mode: 0774

- name: Remove cloned theme directory
  ansible.builtin.file:
    path: "/tmp/Gruvbox-GTK-Theme"
    state: absent

- name: Parse Gnome Shell version
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      gnome-shell --version | sed 's/^[^0-9.]*//' | sed 's/[^0-9]*$//'
    executable: /bin/bash
  register: r_gnome_extension_parse_shell_version
  changed_when: false

- name: Set Gnome Shell version as parameter
  ansible.builtin.set_fact:
    gnome_shell_version: "{{ r_gnome_extension_parse_shell_version.stdout }}"

- name: Check if Gnome Shell was detected
  ansible.builtin.debug:
    msg: "Sorry - no Gnome Shell detected... exiting"
  failed_when: true
  when: not r_gnome_extension_parse_shell_version.stdout

- name: Load Gnome extension information
  ansible.builtin.include_tasks: get_extension_info.yml
  loop: "{{ gnome_extensions | default([]) }}"

- name: Create a list of current enabled extensions
  become_user: "{{ gnome_user }}"
  ansible.builtin.shell: gnome-extensions list --enabled > /tmp/before.txt
  changed_when: false

- name: Download GNOME Shell extensions
  ansible.builtin.get_url:
    url: "{{ item.url }}"
    dest: "/tmp/{{ item.name }}.zip"
    mode: 0774
  loop: "{{ gnome_extensions_full | default([]) }}"
  loop_control:
    label: "{{ item.name }}"

- name: Create GNOME extension directories
  ansible.builtin.file:
    path: /home/{{ gnome_user }}/.local/share/gnome-shell/extensions/{{ item.name }}
    state: directory
    mode: 0774
  become_user: "{{ gnome_user }}"
  loop: "{{ gnome_extensions_full | default([]) }}"
  loop_control:
    label: "{{ item.name }}"

- name: Unzip GNOME extensions
  ansible.builtin.unarchive:
    src: "/tmp/{{ item.name }}.zip"
    dest: "/home/{{ gnome_user }}/.local/share/gnome-shell/extensions/{{ item.name }}"
    remote_src: true
  become_user: "{{ gnome_user }}"
  loop: "{{ gnome_extensions_full | default([]) }}"
  loop_control:
    label: "{{ item.name }}"
  register: unzipped_extension

- name: Restart Gnome Shell to ensure all extensions are visible
  become_user: "{{ gnome_user }}"
  ansible.builtin.command:
    cmd: killall -3 gnome-shell
  changed_when: false
  when: unzipped_extension.changed

- name: Enable extensions
  ansible.builtin.command: gnome-extensions enable {{ item.name }}
  become_user: "{{ gnome_user }}"
  when: item.enable | default(false)
  loop: "{{ gnome_extensions_full | default([]) }}"
  loop_control:
    label: "{{ item.name }}"
  changed_when: false
  ignore_errors: true

- name: Create a list of enabled extensions
  become_user: "{{ gnome_user }}"
  ansible.builtin.shell: gnome-extensions list --enabled > /tmp/after.txt
  changed_when: false

- name: Compare the list of enabled extensions
  ansible.builtin.shell: diff --ignore-all-space /tmp/before.txt /tmp/after.txt|awk '/[<>]/{print $2}'
  register: difference
  changed_when: false

- name: Show changes in enabled extensions
  ansible.builtin.debug:
    msg: "Changes in enabled extensions: {{ difference.stdout }}"
  when: difference.stdout

- name: Clean up list
  become_user: "{{ gnome_user }}"
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  changed_when: false
  loop:
    - /tmp/before.txt
    - /tmp/after.txt

- name: Modify application settings using gsettings
  ansible.builtin.command:
    cmd: gsettings {{ ('--schemadir ' + item.schemadir) if 'schemadir' in item else '' }} set {{ item.schema }} {{ item.key }} {{ item.value }}
  become_user: "{{ gnome_user }}"
  changed_when: false
  loop: "{{ gnome_gsettings | default([]) }}"
  loop_control:
    label: "{{ item.key }}"
  ignore_errors: true

- name: Modify application settings using dconf
  community.general.dconf:
    key: "{{ item.key }}"
    value: "{{ item.value }}"
  become_user: "{{ gnome_user }}"
  loop: "{{ gnome_dconf | default([]) }}"
  loop_control:
    label: "{{ item.key }}"
  changed_when: false
  ignore_errors: true

- name: Make sure {{ gnome_user }} owns home directory
  ansible.builtin.file:
    path: "/home/{{ gnome_user }}"
    owner: "{{ gnome_user }}"
    group: "{{ gnome_user }}"
    recurse: true
    state: directory
    mode: 0774
